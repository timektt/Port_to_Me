import React, { useState } from "react";

const TryDotProduct = () => {
  const [v1, setV1] = useState([2, 3]);
  const [v2, setV2] = useState([4, 1]);

  const parse = (input) => {
    return input
      .split(",")
      .map((n) => parseFloat(n.trim()))
      .filter((n) => !isNaN(n));
  };

  const handleChangeV1 = (e) => setV1(parse(e.target.value));
  const handleChangeV2 = (e) => setV2(parse(e.target.value));

  const dotProduct = v1.length === v2.length
    ? v1.reduce((sum, val, i) => sum + val * v2[i], 0)
    : "‚ùå ‡∏°‡∏¥‡∏ï‡∏¥‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô";

  const cosineSimilarity =
    v1.length === v2.length
      ? (() => {
          const dot = v1.reduce((sum, val, i) => sum + val * v2[i], 0);
          const norm1 = Math.sqrt(v1.reduce((sum, val) => sum + val * val, 0));
          const norm2 = Math.sqrt(v2.reduce((sum, val) => sum + val * val, 0));
          return (dot / (norm1 * norm2)).toFixed(4);
        })()
      : "‚ùå";

  return (
    <section id="try-it-live" className="mt-10 mb-16">
      <h2 className="text-xl font-semibold mb-3"> ‡∏•‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏î‡∏π‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö </h2>
      <p className="mb-2">‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏î‡∏π‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå dot product ‡πÅ‡∏•‡∏∞ cosine similarity ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</p>
      <div className="grid gap-3 mb-4">
        <input
          type="text"
          defaultValue="2, 3"
          onChange={handleChangeV1}
          placeholder="‡πÄ‡∏ß‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå 1 (‡πÄ‡∏ä‡πà‡∏ô 2, 3)"
          className="p-2 border rounded-md bg-white text-black"
        />
        <input
          type="text"
          defaultValue="4, 1"
          onChange={handleChangeV2}
          placeholder="‡πÄ‡∏ß‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå 2 (‡πÄ‡∏ä‡πà‡∏ô 4, 1)"
          className="p-2 border rounded-md bg-white text-black"
        />
      </div>
      <div className="bg-gray-800 text-white p-4 rounded-xl text-sm shadow mb-4">
        <div>üßÆ Dot Product: <strong>{dotProduct}</strong></div>
        <div>üìê Cosine Similarity: <strong>{cosineSimilarity}</strong></div>
      </div>
      <p className="text-green-500 font-semibold">‚úÖ Tip: ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏∏‡∏° ‡πÄ‡∏ä‡πà‡∏ô [1, 0] ‡∏Å‡∏±‡∏ö [0, 1] ‚Üí ‡∏Ñ‡∏ß‡∏£‡πÑ‡∏î‡πâ dot = 0, cosine = 0</p>
    </section>
  );
};

export default TryDotProduct;
