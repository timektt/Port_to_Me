import React from "react";

const MiddlewareConcepts = () => {
  return (
    <div className="p-4 sm:p-6 md:p-8 max-w-4xl mx-auto overflow-x-hidden">
      <h1 className="text-2xl sm:text-3xl md:text-4xl font-bold break-words">
        üõ†Ô∏è Middleware Concepts
      </h1>

      <p className="mt-4 text-lg break-words">
        Middleware ‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà Request ‡∏à‡∏∞‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á Route Handler ‡πÄ‡∏ä‡πà‡∏ô{" "}
        <strong>Logging, Authentication, Error Handling</strong>
      </p>

      <h2 className="text-xl font-semibold mt-6">üìå ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Middleware</h2>
      <div className="overflow-x-auto">
        <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 text-sm sm:text-base">
          <code>{`const express = require("express");
const app = express();

const logger = (req, res, next) => {
  console.log(\`\${req.method} \${req.url}\`);
  next();
};

app.use(logger);

app.get("/", (req, res) => {
  res.send("Hello, Middleware!");
});

app.listen(3000, () => console.log("Server running on port 3000"));`}</code>
        </pre>
      </div>

      <p className="mt-4 text-base">‚ö° ‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ä‡πá‡∏Ñ <code>console.log()</code></p>

      <h2 className="text-xl font-semibold mt-6">üîê Middleware ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Authentication</h2>
      <p className="mt-2 text-base break-words">
        ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ Middleware ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Token ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á API ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
      </p>
      <div className="overflow-x-auto">
        <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 text-sm sm:text-base">
          <code>{`const auth = (req, res, next) => {
  const token = req.headers["authorization"];
  if (token === "secret") {
    next();
  } else {
    res.status(401).json({ message: "Unauthorized" });
  }
};

app.get("/secure", auth, (req, res) => {
  res.send("Access granted!");
});`}</code>
        </pre>
      </div>

      <h2 className="text-xl font-semibold mt-6">üßº ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏•‡∏≥‡∏î‡∏±‡∏ö Middleware</h2>
      <p className="mt-2 text-base break-words">
        Middleware ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà <code>app.use()</code> ‡∏´‡∏£‡∏∑‡∏≠ <code>app.get()</code> ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏ß‡∏£‡∏à‡∏±‡∏î‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡πÄ‡∏ä‡πà‡∏ô Logging ‚Üí Auth ‚Üí Handler
      </p>

      <h2 className="text-xl font-semibold mt-6">üß© ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á Middleware</h2>
      <ul className="list-disc ml-6 mt-2 space-y-1 text-base">
        <li><strong>Application-level middleware</strong> - ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö <code>app.use()</code></li>
        <li><strong>Router-level middleware</strong> - ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö <code>express.Router()</code></li>
        <li><strong>Error-handling middleware</strong> - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ <code>(err, req, res, next)</code></li>
        <li><strong>Built-in middleware</strong> - ‡πÄ‡∏ä‡πà‡∏ô <code>express.json()</code>, <code>express.static()</code></li>
        <li><strong>Third-party middleware</strong> - ‡πÄ‡∏ä‡πà‡∏ô <code>cors</code>, <code>morgan</code></li>
      </ul>

      <h2 className="text-xl font-semibold mt-6">‚úÖ ‡∏™‡∏£‡∏∏‡∏õ</h2>
      <p className="mt-2 text-base break-words">
        Middleware ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô Express ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Request/Response ‡πÑ‡∏î‡πâ‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
        ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏•‡πá‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏°‡πâ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á API
      </p>
    </div>
  );
};

export default MiddlewareConcepts;
