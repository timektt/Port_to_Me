import React from "react";

const ChildProcesses = () => {
  return (
    <div className="max-w-3xl mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">тЪб р╕Бр╕▓р╕гр╣Гр╕Кр╣Й Child Processes р╣Гр╕Щ Node.js</h1>
      <p>
        р╣Гр╕Щ Node.js р╣Ар╕гр╕▓р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╕гр╣Йр╕▓р╕Зр╣Бр╕ер╕░р╕Ир╕▒р╕Фр╕Бр╕▓р╕г <code>Child Processes</code> р╣Ар╕Юр╕╖р╣Ир╕нр╕гр╕▒р╕Щр╕Зр╕▓р╕Щр╣Бр╕Ър╕Ър╕Вр╕Щр╕▓р╕Щр╣Др╕Фр╣Й р╣Вр╕Фр╕вр╣Гр╕Кр╣Й <code>child_process</code> module
      </p>
      
      <h2 className="text-xl font-semibold mt-6">ЁЯУМ р╕Бр╕▓р╕гр╣Гр╕Кр╣Й exec() р╕гр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З Shell</h2>
      <div className="bg-gray-800 text-white p-4 rounded-lg overflow-x-auto">
        <pre>
          <code>{`const { exec } = require('child_process');

exec('ls', (error, stdout, stderr) => {
  if (error) {
    console.error('Error:', error.message);
    return;
  }
  console.log('Output:', stdout);
});`}</code>
        </pre>
      </div>
      
      <h2 className="text-xl font-semibold mt-6">ЁЯУМ р╕Бр╕▓р╕гр╣Гр╕Кр╣Й spawn() р╣Ар╕Юр╕╖р╣Ир╕нр╕гр╕▒р╕Щр╣Вр╕Ыр╕гр╣Ар╕Лр╕кр╣Бр╕вр╕Б</h2>
      <div className="bg-gray-800 text-white p-4 rounded-lg overflow-x-auto">
        <pre>
          <code>{`const { spawn } = require('child_process');

const child = spawn('node', ['-v']);

child.stdout.on('data', (data) => {
  console.log('Output:', data.toString());
});

child.stderr.on('data', (data) => {
  console.error('Error:', data.toString());
});`}</code>
        </pre>
      </div>
      
      <h2 className="text-xl font-semibold mt-6">ЁЯУМ р╕Бр╕▓р╕гр╣Гр╕Кр╣Й fork() р╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕вр╕Бр╣Вр╕Ыр╕гр╣Ар╕Лр╕кр╣Бр╕Ър╕Ър╕нр╕┤р╕кр╕гр╕░</h2>
      <div className="bg-gray-800 text-white p-4 rounded-lg overflow-x-auto">
        <pre>
          <code>{`const { fork } = require('child_process');

const child = fork('child_script.js');

child.on('message', (message) => {
  console.log('Message from child:', message);
});

child.send({ text: 'Hello from parent' });`}</code>
        </pre>
      </div>
      
      <h2 className="text-xl font-semibold mt-6">ЁЯУМ р╕кр╕гр╕╕р╕Ы</h2>
      <p>
        тЬЕ <code>exec()</code>: р╣Гр╕Кр╣Йр╕гр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З shell р╣Бр╕ер╕░р╕гр╕▒р╕Ъ output р╕Чр╕▒р╕Щр╕Чр╕╡<br/>
        тЬЕ <code>spawn()</code>: р╣Гр╕Кр╣Йр╕кр╕гр╣Йр╕▓р╕Зр╣Вр╕Ыр╕гр╣Ар╕Лр╕кр╣Бр╕вр╕Бр╣Бр╕ер╕░р╕кр╕╖р╣Ир╕нр╕кр╕▓р╕гр╕Ьр╣Ир╕▓р╕Щ <code>stdout</code>/<code>stderr</code><br/>
        тЬЕ <code>fork()</code>: р╣Гр╕Кр╣Йр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Бр╕вр╕Бр╣Вр╕Ыр╕гр╣Ар╕Лр╕к Node.js р╣Бр╕ер╕░р╕кр╕╖р╣Ир╕нр╕кр╕▓р╕гр╕Ьр╣Ир╕▓р╕Щ <code>message</code>
      </p>
    </div>
  );
};

export default ChildProcesses;
