import React from "react";

const MongooseORM = () => {
  return (
    <div className="p-4 sm:p-6 md:p-8 max-w-4xl mx-auto">
      <h1 className="text-2xl sm:text-3xl md:text-4xl font-bold">üîó Mongoose ORM for MongoDB</h1>

      <p className="mt-4">
        Mongoose ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ MongoDB ‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Object ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏¢‡∏¥‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
        ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î Schema ‡πÅ‡∏•‡∏∞ Model ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      </p>

      <h2 className="text-xl font-semibold mt-6">üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Mongoose</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 overflow-x-auto">
        <code>{`npm install mongoose`}</code>
      </pre>

      <h2 className="text-xl font-semibold mt-6">üß± ‡∏™‡∏£‡πâ‡∏≤‡∏á Schema ‡πÅ‡∏•‡∏∞ Model</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 overflow-x-auto">
        <code>{`const mongoose = require("mongoose");

mongoose.connect("mongodb://localhost:27017/mydb", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

const userSchema = new mongoose.Schema({
  name: { type: String, required: true },
  age: Number,
  email: String,
  createdAt: { type: Date, default: Date.now }
});

const User = mongoose.model("User", userSchema);`}</code>
      </pre>

      <h2 className="text-xl font-semibold mt-6">‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 overflow-x-auto">
        <code>{`async function createUser() {
  const newUser = new User({ name: "Alice", age: 25, email: "alice@example.com" });
  await newUser.save();
  console.log("User Created:", newUser);
}

createUser();`}</code>
      </pre>

      <h2 className="text-xl font-semibold mt-6">üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 overflow-x-auto">
        <code>{`async function findUsers() {
  const users = await User.find();
  console.log("All Users:", users);
}

findUsers();`}</code>
      </pre>

      <h2 className="text-xl font-semibold mt-6">‚úèÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 overflow-x-auto">
        <code>{`async function updateUser() {
  const result = await User.updateOne({ name: "Alice" }, { age: 30 });
  console.log("Update Result:", result);
}

updateUser();`}</code>
      </pre>

      <h2 className="text-xl font-semibold mt-6">üóëÔ∏è ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 overflow-x-auto">
        <code>{`async function deleteUser() {
  const result = await User.deleteOne({ name: "Alice" });
  console.log("Delete Result:", result);
}

deleteUser();`}</code>
      </pre>

      <p className="mt-6">
        üí° <strong>‡∏™‡∏£‡∏∏‡∏õ:</strong> Mongoose ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ MongoDB ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô ‡∏î‡πâ‡∏ß‡∏¢ Schema ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö validation, middleware, population ‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å
      </p>
    </div>
  );
};

export default MongooseORM;
