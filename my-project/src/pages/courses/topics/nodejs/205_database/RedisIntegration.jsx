import React from "react";

const RedisIntegration = () => {
  return (
    <div className="max-w-3xl mx-auto p-4">
      <h1 className="text-2xl sm:text-3xl md:text-4xl font-bold mb-4">üöÄ Redis Integration in Node.js</h1>

      <p className="mb-4">
        Redis ‡πÄ‡∏õ‡πá‡∏ô in-memory data store ‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô cache, session storage, ‡πÅ‡∏•‡∏∞ pub/sub system
      </p>

      <h2 className="text-xl font-semibold mt-6">üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Redis Client</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-md overflow-x-auto">
        <code>{`npm install redis`}</code>
      </pre>

      <h2 className="text-xl font-semibold mt-6">üîå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Redis</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-md overflow-x-auto">
        <code>{`const redis = require("redis");

const client = redis.createClient();

client.connect()
  .then(() => console.log("‚úÖ Connected to Redis"))
  .catch(err => console.error("‚ùå Redis connection failed", err));`}</code>
      </pre>

      <h2 className="text-xl font-semibold mt-6">üìå Set ‡πÅ‡∏•‡∏∞ Get ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-md overflow-x-auto">
        <code>{`async function redisExample() {
  await client.set("username", "Superbear");
  const value = await client.get("username");
  console.log("Username:", value);
}

redisExample();`}</code>
      </pre>

      <h2 className="text-xl font-semibold mt-6">üß† ‡πÉ‡∏ä‡πâ Redis ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö Express</h2>
      <pre className="bg-gray-800 text-white p-4 rounded-md overflow-x-auto">
        <code>{`const express = require("express");
const app = express();

app.get("/cache", async (req, res) => {
  const cached = await client.get("hello");
  if (cached) {
    return res.send("üß† Cache: " + cached);
  }

  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ä‡πâ‡∏≤
  const data = "Hello from server";
  await client.setEx("hello", 60, data); // cache 60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  res.send("üßæ Fresh: " + data);
});

app.listen(3000, () => console.log("Server running on port 3000"));`}</code>
      </pre>

      <p className="mt-6">
        ‚úÖ Redis ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏õ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
      </p>
    </div>
  );
};

export default RedisIntegration;
