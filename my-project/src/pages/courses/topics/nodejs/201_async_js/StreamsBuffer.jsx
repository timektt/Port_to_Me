import React from "react";

const StreamsBuffer = () => {
  return (
    <div className="p-4 sm:p-6 md:p-8 max-w-4xl mx-auto overflow-x-hidden">
      <h1 className="text-2xl sm:text-3xl md:text-4xl font-bold break-words">
        ЁЯУб Streams & Buffers
      </h1>

      <p className="mt-4 text-lg break-words">
        <strong>Streams</strong> р╣Гр╕Щ Node.js р╣Гр╕Кр╣Йр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕нр╣Ир╕▓р╕Щ/р╣Ар╕Вр╕╡р╕вр╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Вр╕Щр╕▓р╕Фр╣Гр╕лр╕Нр╣И р╣Ар╕Кр╣Ир╕Щ р╣Др╕Яр╕ер╣М р╕лр╕гр╕╖р╕н Network Request р╣Вр╕Фр╕вр╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╣Вр╕лр╕ер╕Фр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Фр╣Ар╕Вр╣Йр╕▓р╕лр╕Щр╣Ир╕зр╕вр╕Др╕зр╕▓р╕бр╕Ир╕│
      </p>

      <h2 className="text-xl font-semibold mt-6">ЁЯУМ р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Й Readable Stream</h2>
      <div className="overflow-x-auto">
        <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 text-sm sm:text-base">
          <code>{`const fs = require('fs');
const readStream = fs.createReadStream('largefile.txt', 'utf8');

readStream.on('data', (chunk) => {
  console.log('Received chunk:', chunk);
});`}</code>
        </pre>
      </div>

      <h2 className="text-xl font-semibold mt-6">ЁЯУМ р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Й Writable Stream</h2>
      <div className="overflow-x-auto">
        <pre className="bg-gray-800 text-white p-4 rounded-lg mt-2 text-sm sm:text-base">
          <code>{`const writeStream = fs.createWriteStream('output.txt');

writeStream.write('Hello, World!');
writeStream.end();`}</code>
        </pre>
      </div>

      <p className="mt-4 break-words">
        Streams р╕Кр╣Ир╕зр╕вр╣Гр╕лр╣Й Node.js р╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Вр╕Щр╕▓р╕Фр╣Гр╕лр╕Нр╣Ир╣Др╕Фр╣Йр╕нр╕вр╣Ир╕▓р╕Зр╕бр╕╡р╕Ыр╕гр╕░р╕кр╕┤р╕Чр╕Шр╕┤р╕ар╕▓р╕Юр╣Вр╕Фр╕вр╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╣Вр╕лр╕ер╕Фр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Фр╣Гр╕Щр╕Др╕гр╕▒р╣Йр╕Зр╣Ар╕Фр╕╡р╕вр╕з
      </p>

      <h2 className="text-xl font-semibold mt-6">ЁЯОп р╕Вр╣Йр╕нр╕Фр╕╡р╕Вр╕нр╕З Streams & Buffers</h2>
      <ul className="list-disc ml-6 mt-2 space-y-1 text-base">
        <li>р╕Ыр╕гр╕░р╕лр╕вр╕▒р╕Фр╕лр╕Щр╣Ир╕зр╕вр╕Др╕зр╕▓р╕бр╕Ир╕│ тАФ р╕нр╣Ир╕▓р╕Щр╕Чр╕╡р╕ер╕░р╕кр╣Ир╕зр╕Щ р╣Др╕бр╣Ир╣Вр╕лр╕ер╕Фр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф</li>
        <li>р╕Ыр╕гр╕░р╕кр╕┤р╕Чр╕Шр╕┤р╕ар╕▓р╕Юр╕кр╕╣р╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Вр╕Щр╕▓р╕Фр╣Гр╕лр╕Нр╣И</li>
        <li>р╣Ар╕лр╕бр╕▓р╕░р╕Бр╕▒р╕Ър╕Бр╕▓р╕гр╕кр╣Ир╕Зр╣Др╕Яр╕ер╣М, р╕кр╕Хр╕гр╕╡р╕бр╣Ар╕кр╕╡р╕вр╕З/р╕зр╕┤р╕Фр╕╡р╣Вр╕н, р╕лр╕гр╕╖р╕нр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╕Хр╣Ир╕нр╣Ар╕Щр╕╖р╣Ир╕нр╕З</li>
      </ul>

      <h2 className="text-xl font-semibold mt-6">тЪая╕П р╕кр╕┤р╣Ир╕Зр╕Чр╕╡р╣Ир╕Др╕зр╕гр╕гр╕░р╕зр╕▒р╕З</h2>
      <ul className="list-disc ml-6 mt-2 space-y-1 text-base">
        <li>р╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕Бр╕▓р╕г event р╣Гр╕лр╣Йр╕Фр╕╡ р╣Ар╕Кр╣Ир╕Щ 'error', 'end'</li>
        <li>р╕нр╕▓р╕Ир╕Хр╣Йр╕нр╕Зр╣Гр╕Кр╣Й pipe р╣Ар╕Юр╕╖р╣Ир╕нр╕Др╕зр╕▓р╕бр╕кр╕░р╕Фр╕зр╕Бр╣Гр╕Щр╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н stream</li>
        <li>Buffer р╕Чр╕╡р╣Ир╕бр╕▓р╕Бр╣Ар╕Бр╕┤р╕Щр╣Др╕Ыр╕нр╕▓р╕Ир╕Чр╕│р╣Гр╕лр╣Йр╕лр╕Щр╣Ир╕зр╕вр╕Др╕зр╕▓р╕бр╕Ир╕│р╣Ар╕Хр╣Зр╕бр╣Др╕Фр╣Й</li>
      </ul>
    </div>
  );
};

export default StreamsBuffer;
