import React from "react";

const RegressionAnalysis = () => {
  return (
    <div className="min-h-screen flex flex-col justify-start p-6">
      <h1 className="text-3xl font-bold">üìà ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ñ‡∏î‡∏ñ‡∏≠‡∏¢ (Regression Analysis)</h1>
      <p className="mt-4">
        ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ñ‡∏î‡∏ñ‡∏≠‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡πÉ‡∏ô‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞ Machine Learning ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏≠‡∏¥‡∏™‡∏£‡∏∞ (X) ‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ï‡∏≤‡∏° (Y)
      </p>

      {/* ‚úÖ Linear Regression */}
      <h2 className="text-lg sm:text-xl font-semibold mt-6">1. ‡∏Å‡∏≤‡∏£‡∏ñ‡∏î‡∏ñ‡∏≠‡∏¢‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏™‡πâ‡∏ô (Linear Regression)</h2>
      <p className="mt-2">‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ï‡∏£‡∏á</p>
      <pre className="overflow-x-auto bg-gray-800 text-white p-4 rounded-lg">
        <code>{`import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

X = np.array([1, 2, 3, 4, 5]).reshape(-1, 1)
y = np.array([2, 4, 5, 4, 5])

model = LinearRegression()
model.fit(X, y)
y_pred = model.predict(X)

print("R¬≤ Score:", r2_score(y, y_pred))  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•

plt.scatter(X, y, color="blue")
plt.plot(X, y_pred, color="red")
plt.show()`}</code>
      </pre>

      {/* ‚úÖ Multiple Regression */}
      <h2 className="text-lg sm:text-xl font-semibold mt-6">2. ‡∏Å‡∏≤‡∏£‡∏ñ‡∏î‡∏ñ‡∏≠‡∏¢‡πÄ‡∏ä‡∏¥‡∏á‡∏û‡∏´‡∏∏ (Multiple Linear Regression)</h2>
      <p className="mt-2">‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏≠‡∏¥‡∏™‡∏£‡∏∞‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß</p>
      <pre className="overflow-x-auto bg-gray-800 text-white p-4 rounded-lg">
        <code>{`from sklearn.linear_model import LinearRegression

X_multi = np.array([[1, 2], [2, 3], [3, 5], [4, 7], [5, 11]])
y_multi = np.array([2, 4, 5, 4, 5])

multi_model = LinearRegression()
multi_model.fit(X_multi, y_multi)

print("‡∏Ñ‡πà‡∏≤‡∏™‡∏±‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå:", multi_model.coef_)
print("Intercept:", multi_model.intercept_)`}</code>
      </pre>

      {/* ‚úÖ Logistic Regression */}
      <h2 className="text-lg sm:text-xl font-semibold mt-6">3. ‡∏Å‡∏≤‡∏£‡∏ñ‡∏î‡∏ñ‡∏≠‡∏¢‡πÇ‡∏•‡∏à‡∏¥‡∏™‡∏ï‡∏¥‡∏Å (Logistic Regression)</h2>
      <p className="mt-2">‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó ‡πÄ‡∏ä‡πà‡∏ô ‡πÉ‡∏ä‡πà/‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà</p>
      <pre className="overflow-x-auto bg-gray-800 text-white p-4 rounded-lg">
        <code>{`from sklearn.linear_model import LogisticRegression

X_logistic = np.array([[0], [1], [2], [3], [4]])
y_logistic = np.array([0, 0, 1, 1, 1])

logistic_model = LogisticRegression()
logistic_model.fit(X_logistic, y_logistic)

print("‡∏Ñ‡πà‡∏≤‡∏™‡∏±‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå:", logistic_model.coef_)
print("Intercept:", logistic_model.intercept_)
print("‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤:", logistic_model.predict([[1.5], [3.5]]))`}</code>
      </pre>
    </div>
  );
};

export default RegressionAnalysis;
